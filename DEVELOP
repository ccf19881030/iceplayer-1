vim:tw=0:ts=2:ft=text:norl:

  ####               ##### #
   ##   ####  ####   #   # #    ##### #   # #### #####
   ##   #     #      ##### #    #   # #   # #    #   #
   ##   #     ####   #     #    ##### ##### #### #####
   ##   #     #      #     #    #   #   #   #    # ##
  ####  ####  ####   #     #### #   #   #   #### #   #

1. iceplayer目标?
  重构原有代码，为iceplayer提供灵活性和插件机制
  我希望的灵活性：
    1.不仅是可更换的主题，甚至是可更换的界面引擎
    2.可更换甚至同时使用的多种后端
    3.利于以后维护                                      
    4.尽量减少主要模块的复杂度，updater什么的直接做成插件就好

2. 我们使用的语言和编码风格?
  讨论一下，可以选用的语言有
    1.纯C
    2.CXX
    3.C+Py(Py为插件使用) *(选中)
    4.CXX+Py
    5.混合C/C++

  代码风格希望能够统一，否则将失去可维护性

3. 注释风格?
  可以选择，是使用一种文档系统的风格，还是单独规定？
  关键在于我们的API文档是否想要自动生成，也就是像
  doxygen或gtk-doc那样

4. 文档风格(格式)?
  可选择
  1. rst
  2. markdown
  3. 纯文本

5. 概况?
  因为目前还有一部分基本的问题还未能得到解决，所以暂未开始重构工作
                                                                     |Config Core                
  不同模块间使用CallBack来通信                                       |-------------              
                                         Config Core                 |GKeyFile
                                         Data Backend(Save playlist) |Gconf
 -----------    struct CallBacks         /                            
|           | <------------------       /                |Data Backend  
|  GUI Mod  |                   |    Config && Data API  |--------------         |Backends  (*later)
|           | ---------------   |     /                  |SQLite                 |-------------------
 -----------  struct CB_GUI  |  |    /                   |GKeyFile               |MPlayer
    |                        |  |   /                                            |GST
 struct                 --------------  struct Core_CallBacks    -------------   |
GUI_CallBacks           |            |------------------------->|             |  |*ffmpeg
    |                   |  Core Mod  |                          | Backend Mod |
    |    /--------------|            |<-------------------------|             |
    |    |              --------------  struct CallBacks_BE      -------------
    |   struct Core_CallBacks                                        |
    |    |                                                           |
    |    |                                                           |
 -------------                                                       |
|             |               struct CallBacks_BE                    /
| Plugin Core |<-----------------------------------------------------
|             |
 -------------      |Plugin Core (*later)
                    |------------
                    |libdl
                    |GModule
                    |
                    |*Python

